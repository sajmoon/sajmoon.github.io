webpackJsonp([0xa31518a7d366],{514:function(e,o){e.exports={data:{site:{siteMetadata:{title:"Tinkering with Code.",author:"Simon Ström"}},markdownRemark:{id:"/Users/simon/Code/sajmoon.github.io/src/pages/2015-04-17-phoenix-ecto-on-heroku-2.md absPath of file >>> MarkdownRemark",html:'<p>I tried to deploy a sample Phoenix application to Heroku so I read some blogposts about it etc. Didn’t get it to work. </p>\n<p>There were essentialiy two probelms.</p>\n<ul>\n<li>Migrations.</li>\n<li>Assets.</li>\n</ul>\n<h2>Preconditions</h2>\n<ul>\n<li>Elixir 1.0.4</li>\n<li>Erlang 17.5</li>\n<li>Phoenix 0.11.0</li>\n<li>Ecto 0.10.0</li>\n<li><a href="https://github.com/HashNuke/heroku-buildpack-elixir/tree/36f2ff22d0236589256d9044091b950b7cc565d2">HashNuke heroku-buildpack-elixit (<em>17 April 2015</em>)</a></li>\n</ul>\n<h2>Migrations</h2>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>heroku run ecto migrate --no-create</code></pre>\n      </div>\n<p>You need the <code>--no-create</code>, otherwise mix complains that the db could not be created. The error message is sort of disguised.</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code>** <span class="token punctuation">(</span>Mix<span class="token punctuation">)</span> The database <span class="token keyword">for</span> repo Cronos.Repo couldn\'t be created, reason given: Error: You must <span class="token function">install</span> at least one postgresql-client-<span class="token operator">&lt;</span>version<span class="token operator">></span> package.\n</code></pre>\n      </div>\n<h2>Assets</h2>\n<p>I deployed my app, and it was just plain HTML. No css.\nInstead i got <code>404 NOT FOUND</code> for all assets.</p>\n<p>Apperantly heroku builds and compiles the app, collects all dependencies <strong>but</strong> does not compile sass. So the repo you published to Heroku does not have any css at all.  Turns out that <code>/priv/static/css</code> and <code>priv/static/js</code> are included in the standard <code>.gitignore</code> for Phoenix applications.</p>\n<p>So as a quickfix we just have to <em>unigore</em> those files. Push the new commit and voila!</p>\n<p>However, compiled css and js in the repo is not very nice is it. I asked around abit and googled some; no solution at the moment. If you find any, let me know.</p>',frontmatter:{title:"Problems deploying Phoenix to Heroku",date:"April 17, 2015"}}},pathContext:{slug:"/2015-04-17-phoenix-ecto-on-heroku-2/"}}}});
//# sourceMappingURL=path---2015-2015-04-17-phoenix-ecto-on-heroku-2-ba828440e2560c67e2a9.js.map